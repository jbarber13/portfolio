import java.util.*;
import java.io.*;

public class AddressList {
 /**
 This nested, private class represents a node of a singly linked list.
 */
   private class ListNode
   {
      private String name;
      private String tel; // Telephone number
      private String email;
      private String addr; // Address
      private String dob; // Date of birth
      private ListNode next; // Pointer to the next node
   
      private ListNode(String name, String tel, String email, String addr, String dob)
      {
         this.name = name;
         this.tel = tel;
         this.email = email;
         this.addr = addr;
         this.dob = dob;
      } // end of the constructor
   
      public String getName() { 
         return name; }
      public String getTel() { 
         return tel; }
      public String getEmail() { 
         return email; }
      public String getAddr() { 
         return addr; }
      public String getDob() {
         return dob; }
   
      public void setName(String name) { this.name = name; }
      public void setTel(String tel) { this.tel = tel; }
      public void setEmail(String email) { this.email = email; }
      public void setAddr(String addr) { this.addr = addr; }
      public void setDob(String dob) { this.dob = dob; }
   
      public ListNode getNext() { 
         return next; }
      public void setNext(ListNode link) { next = link; }
   } // end of class ListNode
   
   
   
   
   
   
   private ListNode head;
   private ListNode current;
   
   public AddressList(){
      head = new ListNode("head", "", "", "", "");
      current = head;
      
      
      
      
      //init
      addToFront("name1", "t1", "e1", "a1", "d1");
      addToFront("name2", "t2", "e2", "a2", "d2");
      addToFront("name3", "t3", "e3", "a3", "d3");
      //this.toString();
     // System.out.println(phoneNumberByName("name3"));
   
   }


   public boolean isEmpty(){
      boolean empty = false;
      if(head.getNext()== null){
         empty = true;
      }   
      return empty;
   }
   public void addToFront(String name, String tel, String email, String address, String dob){
      ListNode n = new ListNode(name, tel, email, address, dob);
      n.setNext(head.getNext());
      current.setNext(n);
   }
   
   public void addToBack(String name, String tel, String email, String address, String dob){
      ListNode n = new ListNode(name, tel, email, address, dob);
   
      if(!this.isEmpty()){
         if(current.getNext() == null){
            current.setNext(n);
            current = head;
         }else{
            current = current.getNext();
            addToBack(n.getName(), n.getTel(), n.getEmail(), n.getAddr(), n.getDob());
         }           
      }
   }
   public String toString(){
      String out = "";   
      if(current.getNext() != null){
         out += current.getName();
         out += " ";
         out += current.getTel();
         out += " ";
         out += current.getEmail();
         out += " ";
         out += current.getAddr();
         out += " ";
         out += current.getDob();
         out += "\n\n";
         
         current = current.getNext();
         this.toString();
      }
      current = head;
      System.out.println(out);
      return out;
   }
   public String reverstToString(){
      String out = "";
      
      return out;
   }
   public AddressList reverse(){
      AddressList New = new AddressList();
      
      return new AddressList();
   }
   public int sizeOf(){
      int size = 0;
      
      return size;
   }
   private boolean sizeRecurse(){
      
   }
   public String phoneNumberByName(String name){
      //String num = "No Matching Data";
      
      if(current.getNext() != null){
         if (current.getName().equals(name)){
            System.out.println("test");         
            return current.getTel();
         }         
         current = current.getNext();
         this.phoneNumberByName(name);
      }
      current = head;   
      return "No Matching Data";
      
   }
   
   public String emailByName(String name){
      String email = "No Matching Data";
      if(current.getNext() != null){
         if (current.getName().equals(name)){
            return current.getEmail();
         }
         current = current.getNext();
      }
      current = head; 
      return email;
   }
   public String nameByPhoneNumber(String phoneNum){
      String name = "No Matching Data";
      if(current.getNext() != null){
         if (current.getTel().equals(phoneNum)){
            return current.getName();
         }
         current = current.getNext();
      }
      current = head; 
   
      return name;
   }
   public String dobByName(String name){
      String dob = "No Matching Data";
      if(current.getNext() != null){
         if (current.getName().equals(name)){
            return current.getDob();
         }
         current = current.getNext();
      }
      current = head; 
      return dob;
   }
   
   
   
   public static void main(String args[]){
      AddressList a = new AddressList();
   }

}